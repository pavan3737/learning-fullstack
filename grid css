
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CSS Grid</title>
    <style>
          <p>
        *grid is used to make layouts
        *the space between 2 grid lines is called grid track
        *if we give similar conditions to 2 grids then they will
        overlap with each other.
        *by using grid template colummns,grid template rows we can mention number of rows and colummns
        *grid-row :1/2-mean strat from 1st row and go upto 2nd row or we can usedgrid row stand and grid row end
        *we can also give row and column names
        *by using grid template areas we can name the grid areas
        *if we two items same area name they will over lap with each other
        *fr is a unit which is used in grid fr means fraction
        *if we give fr name 3 times it will become 3 parts
        *by using gap function we can give gap between cells
        *justify content center the content will centered if we give width
        *if we give align item center the items will be centered if we give height
        *by usign self function we can work single item like align self
         

    </p>
        .container {
            width: 80vw;
            height: 100vh;
            border: 2px solid black;
            display: grid;
            /* grid-template-columns: [pehla] 120px [doosra] 100px [t]; */
            /* grid-template-rows: 100px 100px 100px; */
            /* grid-template-columns: repeat(4, minmax(100px, 1fr)); */
            grid-template-columns: repeat(4, 80px);
            grid-template-rows: repeat(2, 80px);
            /* gap: 34px; */
            row-gap: 10px;
            column-gap: 44px;
            justify-items: center;
            align-items: center;
        }

        .item {
            border: 2px solid red;
            height: 55px;
            width: 55px;
        }

        .item-4 {
            /* grid-row: 1/2;
            grid-column: pehla/t; */
        }

        .item-1 {
            /* grid-row: 1/2; */
            /* or you can do  */
            /* grid-row-start: 1;
            grid-row-end: 2; */

            /* same thing */
            /* grid-column: 1/2; */
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="item item-1">1</div>
        <div class="item">2</div>
        <div class="item">3</div>
        <div class="item item-4">4</div>
        <div class="item">5</div>
    </div>
</body>

</html>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CSS Grid</title>
    <style>
        .container {
            border: 2px solid black;
            display: grid;
            grid-template-areas: "nav nav nav"
                "side article article"
                "footer footer footer";
        }

        .item {
            border: 2px solid red;
            height: 55px;
        }

        .item-1 {
            grid-area: nav;
            background-color: aqua;
        }

        .item-2 {
            grid-area: side;
            background-color: beige;
        }

        .item-3 {
            grid-area: article;
            background-color: azure;
        }

        .item-4 {
            grid-area: footer;
        }

        .item-5 {
            grid-area: nav;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="item item-1">1</div>
        <div class="item item-2">2</div>
        <div class="item item-3">3</div>
        <div class="item item-4">4</div>
        <div class="item item-5">5</div>
    </div>
</body>

</html>
